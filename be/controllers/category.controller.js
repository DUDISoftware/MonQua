const Category = require("../models/productCategory.model");

// ‚ûï Th√™m danh m·ª•c
exports.createCategory = async (req, res) => {
  try {
    const { name, description, parent_id } = req.body;

    const category = new Category({
      name,
      description,
      parent_id: parent_id || null,
    });

    const saved = await category.save();
    res.status(201).json({
      message: "T·∫°o danh m·ª•c th√†nh c√¥ng",
      data: saved
    });
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi t·∫°o danh m·ª•c", error: err.message });
  }
};

// üìã L·∫•y t·∫•t c·∫£ danh m·ª•c
exports.getAllCategories = async (req, res) => {
  try {
    const categories = await Category.find().populate("parent_id", "name");
    res.json(categories);
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch", error: err.message });
  }
};

// üîç L·∫•y chi ti·∫øt danh m·ª•c
exports.getCategoryById = async (req, res) => {
  try {
    const category = await Category.findById(req.params.id).populate("parent_id", "name");
    if (!category) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y danh m·ª•c" });
    res.json(category);
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi l·∫•y chi ti·∫øt", error: err.message });
  }
};

// ‚úèÔ∏è C·∫≠p nh·∫≠t danh m·ª•c
exports.updateCategory = async (req, res) => {
  try {
    const updated = await Category.findByIdAndUpdate(
      req.params.id,
      req.body,
      { new: true }
    );
    if (!updated) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y danh m·ª•c" });
    res.json({
      message: "C·∫≠p nh·∫≠t th√†nh c√¥ng",
      data: updated
    });
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t", error: err.message });
  }
};

// ‚ùå Xo√° danh m·ª•c
exports.deleteCategory = async (req, res) => {
  try {
    const deleted = await Category.findByIdAndDelete(req.params.id);
    if (!deleted) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y danh m·ª•c" });
    res.json({ message: "ƒê√£ xo√° danh m·ª•c th√†nh c√¥ng" });
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi xo√°", error: err.message });
  }
};
